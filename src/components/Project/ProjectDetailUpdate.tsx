import {useParams, useNavigate} from 'react-router';
import { useDispatch, useSelector} from 'react-redux';
import type { RootState } from '@/main';
import type {Project} from '@/models/Project';
import { updateProject } from '@/store/ProjectSlice';
import ProjectEditForm from './ProjectEditForm';
import type { AppDispatch } from '@/main';


export default function ProjectDetailUpdate() {
    const { id } = useParams<{ id: string }>();

    const project = useSelector((state: RootState) => // –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è Redux.
    state.projects.projects.find((p) => String(p.id) === id)
);

//const dispatch = useDispatch();
const dispatch = useDispatch<AppDispatch>(); //–¢–∏–ø–∏–∑–∏—Ä dispatch, –¥–ª—è —É–¥–æ–±–Ω –∏ –±–µ–∑–æ–ø —Å –∞—Å–∏–Ω—Ö —ç–∫—à–µ–Ω–∞–º–∏ (thunk).
const navigate = useNavigate();


    const handleSubmit = (updatedProject: Project) => {
        console.log('Updated project:', updatedProject);
            dispatch(updateProject(updatedProject));
             navigate(`/projects-list`); // –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É


    };

    if (!id || !project) return <p>üîç Project is not found. Try again</p>;

    return <ProjectEditForm project={project} onSubmit={handleSubmit} />;

   

}